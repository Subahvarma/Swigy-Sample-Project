name: Node.js Docker Image Deploy into ECR

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  build:
    runs-on: self-hosted
    
    env:
      AWS_REGION: ap-south-1
      ECR_REPO_NAME: frissly-docker-repo  # Replace this with your repository name
      DOCKER_IMAGE_NAME: frissly-backend
      CONTAINER_NAME: frissly-container  # Added container name
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Set your Node.js version here

      - name: Check if npm is available
        id: check_npm
        run: |
          if ! command -v npm &> /dev/null
          then
            echo "npm not found, skipping npm install, build, and test."
            echo "npm_found=false" >> $GITHUB_ENV
          else
            echo "npm found, proceeding with npm install, build, and test."
            echo "npm_found=true" >> $GITHUB_ENV
          fi

      # - name: Install dependencies, build, and test
      #   if: env.npm_found == 'true'
      #   run: |
      #     npm install
      #     npm run build --if-present
      #     npm run test --if-present

      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: $AWS_REGION

      - name: Install Trivy
        run: |
          curl -sfL https://github.com/aquasecurity/trivy/releases/download/v0.39.0/trivy_0.39.0_Linux-64bit.deb -o trivy.deb
          sudo dpkg -i trivy.deb

      - name: Trivy filesystem scan
        run: |
          trivy fs --format table -o fs-report.html .

      - name: Clean up previous Docker images and volumes
        run: |
          docker ps -aq --filter "name=${CONTAINER_NAME}" | xargs -I {} docker stop {} || true
          docker ps -aq --filter "name=${CONTAINER_NAME}" | xargs -I {} docker rm {} || true
          docker images --filter "reference=$DOCKER_IMAGE_NAME*" -q | xargs -I {} docker rmi -f {} || true
          docker builder prune -f || true
          docker container prune -f || true
          docker network prune -f || true
 
      - name: Build Docker image
        run: |
          docker build -t $DOCKER_IMAGE_NAME .

      - name: Trivy image scan
        run: |
          trivy image --format table -o image.html $DOCKER_IMAGE_NAME

      - name: Run Docker container
        run: |
          docker run -itd --name $CONTAINER_NAME -p 3000:3000 $DOCKER_IMAGE_NAME
          

      # - name: Verify attachment files
      #   run: |
      #     ls -al fs-report.html || echo "fs-report.html not found!"
      #     ls -al image.html || echo "image.html not found!"
      #     ls -al ./dependency-check/dependency-check-report/dependency-check-report.xml || echo "dependency-check-report.xml not found!"

      # - name: Upload OWASP Dependency-Check report
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: dependency-check-report
      #     path: ./dependency-check/dependency-check-report/dependency-check-report.xml

      # - name: Upload Trivy filesystem scan report
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: trivy-filesystem-scan-report
      #     path: fs-report.html

      # - name: Upload Trivy image scan report
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: trivy-image-scan-report
      #     path: image.html
          

      # - name: Send email notification
      #   if: always()
      #   uses: dawidd6/action-send-mail@v3
      #   with:
      #     server_address: smtp.gmail.com
      #     server_port: 587
      #     username: ${{ secrets.SMTP_USER }}
      #     password: ${{ secrets.SMTP_PASS }}
      #     subject: "GitHub Actions Build Status - ${{ github.workflow }} ${{ job.status }}"
      #     body: |
      #       The build for ${{ github.repository }} has completed.

      #       Status: ${{ job.status }}
      #       Commit: ${{ github.sha }}
      #       Branch: ${{ github.ref }}
      #     to: "varmapotthuri4@gmail.com"
      #     from: "sender@example.com"
      #     attachments: |
      #       fs-report.html
      #       image.html
      #       ./dependency-check/dependency-check-report/dependency-check-report.xml

        # Clean up entire workspace after the job completes
      - name: Clean up workspace
        run: |
          echo "Cleaning up entire workspace to save disk space..."
          rm -rf *
