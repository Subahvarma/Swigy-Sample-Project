name: Deploy Node.js App to Azure VM

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # ✅ Generate SSH Key Pair
      - name: Generate SSH Key Pair
        run: |
          mkdir -p ~/.ssh
          ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N ""
          chmod 600 ~/.ssh/id_rsa

      # ✅ Upload SSH Key as Artifact
      - name: Upload SSH Key as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ssh-key
          path: ~/.ssh/id_rsa

      # ✅ Login to Azure
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'

      # ✅ Ensure Resource Group Exists
      - name: Ensure Resource Group Exists
        run: az group create --name test-rg --location eastus --output none || true

      # ✅ Ensure Virtual Machine Exists
      - name: Ensure Virtual Machine Exists
        run: |
          if ! az vm show --resource-group test-rg --name test-vm --query 'name' --output tsv; then
            az vm create \
              --resource-group test-rg \
              --name test-vm \
              --image Ubuntu2204 \
              --admin-username azureuser \
              --public-ip-sku Standard \
              --size Standard_B2s \
              --output none
          fi

      # ✅ Get VM Public IP
      - name: Get VM Public IP
        run: |
          ip=$(az vm list-ip-addresses \
            --resource-group test-rg \
            --name test-vm \
            --query "[].virtualMachine.network.publicIpAddresses[0].ipAddress" \
            --output tsv)
          echo "VM Public IP: $ip"
          echo "ip=$ip" >> $GITHUB_ENV

      # ✅ Download SSH Key from Artifact
      - name: Download SSH Key from Artifact
        uses: actions/download-artifact@v4
        with:
          name: ssh-key
          path: ~/.ssh

      # ✅ Set Correct Permissions for SSH Key
      - name: Set Correct Permissions for SSH Key
        run: chmod 600 ~/.ssh/id_rsa

      # ✅ Deploy Node.js App
      - name: Deploy Node.js App
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa azureuser@${{ env.ip }} << 'EOF'
            set -e

            # ✅ Update & Install Required Packages
            sudo apt update
            sudo apt install -y nodejs npm git

            # ✅ Install PM2 for Process Management
            sudo npm install -g pm2

            # ✅ Remove existing app folder to avoid conflicts
            rm -rf ~/app
            mkdir -p ~/app
            cd ~/app

            # ✅ Clone repository fresh
            git clone https://${{ secrets.GIT_TOKEN }}@github.com/Ayeesha208/Python-Webapp.git .

            # ✅ Verify repository content
            ls -la

            # ✅ Check if package.json exists
            if [ ! -f package.json ]; then
              echo "ERROR: package.json not found in the repository!"
              exit 1
            fi

            # ✅ Install Node.js Dependencies
            npm install

            # ✅ Start Node.js App using PM2 (on Port 3000)
            pm2 delete myapp || true  # Remove any previous instance
            pm2 start npm --name "myapp" -- run start
            pm2 save
            pm2 startup systemd

            # ✅ Ensure Port 3000 is Open
            sudo ufw allow 3000 || true
          EOF

      # ✅ Verify Application Deployment
      - name: Verify Application Deployment
        run: curl --retry 5 --retry-delay 10 --max-time 30 http://${{ env.ip }}:3000 || (echo "Application failed to start" && exit 1)
